What will be the output of this program?
class Color {
     int red, green, blue;

     void Color() {
             red = 10;
             green = 10;
             blue = 10;
     }

     void printColor() {
           System.out.println("red: " + red + " green: " + green + " blue: " + blue);
     }

     public static void main(String [] args) {
             Color color = new Color();
             color.printColor();
     }
}

Anwer: Contructor has return type of void, so will be treated as a method.
and hence the o/p would be .
Compiles fine, and when run, it prints the following: red: 0 green: 0 blue: 0

3.Consider the following program:
class Base {}
class DeriOne extends Base {}
class DeriTwo extends Base {}

class ArrayStore {
     public static void main(String []args) {
             Base [] baseArr = new DeriOne[3];
             baseArr[0] = new DeriOne();
             baseArr[2] = new DeriTwo();
             System.out.println(baseArr.length);
     }
}

answer : 3.

4.Determine the output of this program:
class Color {
     int red, green, blue;

     Color() {
             Color(10, 10, 10);
     }

     Color(int r, int g, int b) {
             red = r;
             green = g;
             blue = b;
     }

     void printColor() {
             System.out.println("red: " + red + " green: " + green + " blue: " + blue);
     }

     public static void main(String [] args) {
             Color color = new Color();
             color.printColor();
     }
}

ans: Compiles without errors, and when run, it prints: red: 10 green: 10 blue: 10

5.Choose the correct option based on this code segment:
class Rectangle { }
class ColoredRectangle extends Rectangle { }
class RoundedRectangle extends Rectangle { }
class ColoredRoundedRectangle extends ColoredRectangle, RoundedRectangle { }

answer:
Compiler error: '{' expected cannot extend two classes

Consider the following program and determine the output:
class Test {
     public void print(Integer i) {
             System.out.println("Integer");
     }
     public void print(int i) {
             System.out.println("int");
     }
     public void print(long i) {
             System.out.println("long");
     }
     public static void main(String args[]) {
             Test test = new Test();
                 test.print(10);
     }
}
answer  int.

Consider the following code and choose the right option for the word <access-modifier>:
// Shape.java
public class Shape {
     protected void display() {
             System.out.println("Display-base");
      }
}

// Circle.java
public class Circle extends Shape {
     <access-modifier> void display(){
             System.out.println("Display-derived");
     }
}

ans: Public and protected both can be used

Which of the following method(s) from Object class can be overridden? (Select all that apply.)
finalize() method
clone() method
getClass() method
notify() method
E.wait() method

ans: clone()

Choose the correct option based on the following program:
class Color {
     int red, green, blue;

     Color() {
             this(10, 10, 10);
     }

     Color(int r, int g, int b) {
             red = r;
             green = g;
             blue = b;
     }

     public String toString() {
             return "The color is: " + red + green + blue;
     }

     public static void main(String [] args) {
             System.out.println(new Color());
     }
}

ans:Compiles fine, and when run, it prints the following: The color is: 101010

class Color {
     int red, green, blue;

     Color() {
             this(10, 10, 10);
     }

     Color(int r, int g, int b) {
             red = r;
             green = g;
             blue = b;
         }

        String toString() {
             return "The color is: " + " red = " + red + " green = " + green + " blue = " + blue;
         }

        public static void main(String [] args) {
             // implicitly invoke toString method
             System.out.println(new Color());
        }
     }
     
ans: Compiles fine, and when run, it prints the following: The color is: red = 10 green = 10 blue = 10

     

